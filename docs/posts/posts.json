[
  {
    "path": "posts/2024-06-05-great-bar-chart/",
    "title": "A great bar chart",
    "description": "A function for better than out of the gg-box bar charts, \nusing tidyverse & Plotly.",
    "author": [
      {
        "name": "Brianna Argall",
        "url": {}
      }
    ],
    "date": "2024-08-26",
    "categories": [],
    "contents": "\r\nOriginal context\r\nThis function was made for use in exploratory data analysis of a heart failure dataset.\r\nOn to the function!\r\n\r\n\r\nggbar <- function(xvalue) {\r\n  \r\n  xvar_name <- deparse(substitute(xvalue))\r\n  xvar_spaces <- gsub(\"_\", \" \", xvar_name)\r\n  # I am using regex to convert the first letter from lowercase to uppercase  \r\n  # instead of using a prebuilt function because I want to avoid changing\r\n  # acronyms in capital letters to sentence or title case\r\n  xlab_title <- sub(\"\\\\b([a-z])\", \r\n                    \"\\\\U\\\\1\", \r\n                    (gsub(\"_\", \" \", xvar_spaces)),\r\n                    perl=TRUE)\r\n  \r\n  p <- df %>%\r\n    ggplot(aes(x = {{xvalue}}, fill = {{xvalue}})) +\r\n    labs(x = xlab_title, y = \"Count\", \r\n         title = paste(\"Bar chart of\", gsub(\"_\", \" \", xvar_spaces))) +\r\n    geom_bar() +\r\n    theme(panel.grid.major.x = element_blank()) +\r\n    scale_fill_viridis_d()\r\n  \r\n  ggplotly(p) %>%\r\n  hide_legend()\r\n  \r\n}\r\n\r\n\r\nExample using Iris\r\nIris is convenient as an inbuilt dataset but this is pretty boring….\r\nIt also doesn’t demonstrate the work I did to automatically make the x-axis title nicer. Nonetheless you can see that it is less boring than the standard.\r\n\r\n\r\ndf <- iris\r\n\r\nggbar(Species)\r\n\r\n\r\n\r\nWithout using the function\r\nWe can see here that the out of the box bar chart is boring grey, has vertical gridlines in the background (unecessary ink distracting from data in a bar chart) and has a sad y-axis label we would manually change. On a different dataset, we might appreciate more that the use of Plotly in ggbar() allows us to zoom in and pan on the figure without reaching for Shiny. We might also value setting the dataframe inside the function (I don’t normally assign to df!) so we aren’t retyping the dataframe each time we make a plot of a categorical variable.\r\n\r\n\r\nggplot(iris, aes(x = Species)) +\r\n  geom_bar()\r\n\r\n\r\n\r\nWhat was I doing before?\r\nHere is an example of a bar chart I made for EDA of a synthetic HIV dataset.\r\n\r\n\r\nart_hiv %>%\r\n  ggplot(aes(x = reorder(Comp_INI, Comp_INI, length), fill = Comp_INI)) +\r\n  geom_bar() +\r\n  scale_y_continuous(labels = scales::label_comma()) +\r\n  scale_fill_manual(values = c(\"#b3e2cd\", \"#f4cae4\", \"#e6f5c9\", \"#E1E1E1\")) +\r\n  ggtitle( \"Complementary integrase inhibitor bar chart\") +\r\n  xlab(\"Complementary integrase inhibitor\") +\r\n  ylab(\"Count\") +\r\n  theme_bw() +\r\n  theme(panel.border = element_blank(),\r\n        panel.grid.major.x = element_blank(),\r\n        legend.position = \"None\")\r\n\r\n\r\nIt is pretty but it was also a lot of repetition to produce a bunch of similar charts.\r\n\r\n\r\n\r\nMore examples can be seen at Exploring synthetic HIV data\r\nFor the specific case of binary variables I had:\r\n\r\n\r\nbinary_figure <- function(xvalue) {\r\n  art_hiv %>%\r\n    ggplot(aes(x = {{xvalue}}, fill = {{xvalue}})) +\r\n    geom_bar() +\r\n    scale_y_continuous(labels = scales::label_comma(),\r\n                       name = \"Count\") +\r\n    # I just think the only grey is boring & defaults were ugly (too saturated)\r\n    # I also wanted to avoid red or green symbolism\r\n    scale_fill_manual(values = c(\"#8dd3c7\", \"#bebada\")) +\r\n    theme_bw() +\r\n    theme(panel.border = element_blank(),\r\n          panel.grid.major.x = element_blank(),\r\n          legend.position = \"None\") +\r\n    stat_count(geom = \"text\", aes(label = after_stat(count)), vjust = -0.5)\r\n}\r\n\r\n\r\nComments\r\nYou’ll notice these functions have a few differences, owing to differences in the datasets and the task. My ggbar() function was from a dataset that had a lot of variables and not as many rows, so handling the variable names was important and there was no need to display large counts nicely. binary_figure() doesn’t provide any interactivity and the counts are labelled with the bars (yes I did also consider y axis transformation to make these easier to read). I loved my custom grey that matched the intensity of the colours perfectly for the other column. To achieve this I took the rgb values from my colours - which were selected from a colorbrewer palette - and found the hsv code corresponding to setting the red, green and blue content each to the average of those three components.\r\n\r\n\r\n\r\n",
    "preview": "posts/2024-06-05-great-bar-chart/great-bar-chart_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2024-08-27T12:50:09+10:00",
    "input_file": "great-bar-chart.knit.md"
  },
  {
    "path": "posts/2024-08-27-exploring-synthetic-hiv-data/",
    "title": "Exploring synthetic HIV data",
    "description": "More figure examples.",
    "author": [
      {
        "name": "Brianna Argall",
        "url": {}
      }
    ],
    "date": "2024-06-27",
    "categories": [],
    "contents": "\r\nThis dataset can be found at:\r\nKuo, Nicholas (2022). The Heath Gym Synthetic HIV Dataset. figshare. Dataset. https://doi.org/10.6084/m9.figshare.19838470.v1\r\nMore information on the dataset is available at:\r\nKuo et al. (2022).\r\nThe Health Gym: Synthetic Health-Related Datasets for the Development of Reinforcement Learning Algorithms. arXiv preprint arXiv:2203.06369.\r\nI have hidden the code by default (some of it is long and boring) - please click “hide” to toggle hiding the blocks.\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  rename_with(function(x) gsub(\" \", \"_\", x)) %>%\r\n  rename_with(function(x) gsub(\"\\\\(|\\\\)|\\\\.|-\", \"\", x)) %>% # remove ().-\r\n  mutate(Gender = factor(Gender, labels = c(\"1\" = \"Male\", \r\n                                            \"2\" = \"Female\")),\r\n         Ethnicity = factor(Ethnic, labels = c(\"2\" = \"African\", \r\n                                               \"3\" = \"Caucasian\",\r\n                                               \"4\" = \"Other\")),\r\n         Base_Drug_Combo = factor(Base_Drug_Combo, \r\n                                  labels = c(\"0\" = \"FTC + TDF\",\r\n                                             \"1\" = \"3TC + ABC\",\r\n                                             \"2\" = \"FTC + TAF\",\r\n                                             \"3\" = \"DRV + FTC + TDF\",\r\n                                             \"4\" = \"FTC + RTVB + TDF\",\r\n                                             \"5\" = \"Other\")),\r\n         Comp_INI = factor(Comp_INI, labels = c(\"0\" = \"DTG\",\r\n                                                \"1\" = \"RAL\",\r\n                                                \"2\" = \"EVG\",\r\n                                                \"3\" = \"Not Applied\")),\r\n         Comp_NNRTI = factor(Comp_NNRTI, labels = c(\"0\" = \"NVP\",\r\n                                                    \"1\" = \"EFV\",\r\n                                                    \"2\" = \"RPV\",\r\n                                                    \"3\" = \"Not Applied\")),\r\n         Extra_PI = factor(Extra_PI, labels = c(\"0\" = \"DRV\",\r\n                                                \"1\" = \"RTVB\",\r\n                                                \"2\" = \"LPV\",\r\n                                                \"3\" = \"RTV\",\r\n                                                \"4\" = \"ATV\",\r\n                                                \"5\" = \"Not Applied\")),\r\n         Extra_pkEn = factor(Extra_pkEn, labels = c(\"0\" = \"False\",\r\n                                                    \"1\" = \"True\")),\r\n         VL_M = factor(VL_M, labels = c(\"0\" = \"False\",\r\n                                        \"1\" = \"True\")),\r\n         CD4_M = factor(CD4_M, labels = c(\"0\" = \"False\",\r\n                                          \"1\" = \"True\")),\r\n         Drug_M = factor(Drug_M, labels = c(\"0\" = \"False\",\r\n                                            \"1\" = \"True\")),\r\n         PatientID = factor(PatientID),\r\n         Ethnic = NULL) %>%\r\n  rename(Row_Number = \"1\") -> art_hiv\r\n\r\n# Note: No observations list Asian ethnicity, hence this label was not used.\r\n\r\n\r\nData dictionary\r\nThere are 534960 rows and 16 columns in the dataframe.\r\nA description of the columns is provided in this table.\r\nAlthough the description of the Ethnicity column includes Asian,\r\nno one was listed as having this ethnicity in the data.\r\n\r\n\r\nhide\r\n\r\ncol_desc <- c(\"An integer indicating row number\",\r\n              \"Viral Load (copies per mL)\",\r\n              \"CD4 Absolute Count (copies per mm^3)\",\r\n              \"CD4 Relative Count (copies per mm^3)\",\r\n              \"Gender, male or female\",\r\n              \"Base Drug Combination\",\r\n              \"Complementary Integrase Inhibitor\",\r\n              \"Complementary Non-Nucleoside Reverse Transcriptase Inhibitor\",\r\n              \"Extra Protease Inhibitor\",\r\n              \"Extra Pharmacokinetic Enhancer (y/n)\",\r\n              \"Viral load measured (y/n)\",\r\n              \"CD4 measured (y/n)\",\r\n              \"Drug recorded (y/n)\",\r\n              \"An integer indicating patient ID\",\r\n              \"An integer indicating timepoints\",\r\n              \"Ethnicity, Asian, African, Caucasian or other\")\r\n\r\nkable(cbind(lapply(art_hiv, class), col_desc), \r\n      col.names = c(\"Column\", \"Class\", \"Column description\"))\r\n\r\nColumn\r\nClass\r\nColumn description\r\nRow_Number\r\nnumeric\r\nAn integer indicating row number\r\nVL\r\nnumeric\r\nViral Load (copies per mL)\r\nCD4\r\nnumeric\r\nCD4 Absolute Count (copies per mm^3)\r\nRel_CD4\r\nnumeric\r\nCD4 Relative Count (copies per mm^3)\r\nGender\r\nfactor\r\nGender, male or female\r\nBase_Drug_Combo\r\nfactor\r\nBase Drug Combination\r\nComp_INI\r\nfactor\r\nComplementary Integrase Inhibitor\r\nComp_NNRTI\r\nfactor\r\nComplementary Non-Nucleoside Reverse Transcriptase Inhibitor\r\nExtra_PI\r\nfactor\r\nExtra Protease Inhibitor\r\nExtra_pkEn\r\nfactor\r\nExtra Pharmacokinetic Enhancer (y/n)\r\nVL_M\r\nfactor\r\nViral load measured (y/n)\r\nCD4_M\r\nfactor\r\nCD4 measured (y/n)\r\nDrug_M\r\nfactor\r\nDrug recorded (y/n)\r\nPatientID\r\nfactor\r\nAn integer indicating patient ID\r\nTimepoints\r\nnumeric\r\nAn integer indicating timepoints\r\nEthnicity\r\nfactor\r\nEthnicity, Asian, African, Caucasian or other\r\n\r\nUnivariate visualisations\r\nNo visualisation is provided for Row_Number, Timepoints or for Patient_ID.\r\nThere are 60 rows per patient, each for a different point in time and 8916 patients.\r\nVL visualisation\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  ggplot(aes(x = VL)) +\r\n    geom_histogram() +\r\n    scale_y_continuous(labels = scales::label_comma(),\r\n                  name = \"Count\") +\r\n    scale_x_continuous(labels = scales::label_comma(),\r\n                 name = \"Viral Load (copies per mL)\") +\r\n  ggtitle(\"Viral load histogram\")\r\n\r\n\r\n\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  ggplot(aes(x = VL)) +\r\n    geom_histogram() +\r\n    scale_y_sqrt(labels = scales::label_comma(),\r\n                  name = \"Count\",\r\n                 # added breaks for low counts\r\n                 breaks = c(10^3, 10^4, 5*10^4, 10^5, 1.5*10^5, 2*10^5)) +\r\n    scale_x_sqrt(labels = scales::label_comma(),\r\n                 breaks = c(100, 10^3, 5*10^3, 10^4, 2.5*10^4, 5*10^4, 7.5*10^4),\r\n                 name = \"Viral Load (copies per mL)\") +\r\n  ggtitle(\"Viral load histogram with square root transformation of both axes\")\r\n\r\n\r\n\r\nI chose to apply a square-root transformation to both axes to aid visibility of low values. The square-root transformation was chosen over a log transformation to change the apparent distribution shape less.\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  filter(Timepoints %in% seq(0, 59, 8)) %>%\r\n  ggplot(aes(x = VL)) +\r\n    geom_histogram(binwidth = 5000) +\r\n    scale_y_continuous(labels = scales::label_comma(),\r\n                       name = \"Count\") +\r\n    scale_x_continuous(labels = scales::label_comma(), \r\n                       name = \"Viral Load (copies per mL)\") +\r\n  facet_wrap(.~factor(Timepoints), ncol = 3) +\r\n  ggtitle(\"Viral load histograms for selected timepoints\")\r\n\r\n\r\n\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  filter(Timepoints %in% seq(0, 59, 8)) %>%\r\n  ggplot(aes(x = VL)) +\r\n    geom_histogram() +\r\n    scale_y_sqrt(labels = scales::label_comma(),\r\n                 # default breaks overlapped\r\n                 breaks = c(10, 250, 10^3, 2.5*10^3, 5*10^3),\r\n                 name = \"Count\") +\r\n    scale_x_sqrt(labels = scales::label_comma(), \r\n                 name = \"Viral Load (copies per mL)\",\r\n                 # default breaks overlapped\r\n                 breaks = c(100, 5*10^3, 2.5*10^4, 7.5*10^4)) +\r\n  facet_wrap(.~factor(Timepoints), ncol = 3) +\r\n  ggtitle(\"Viral load histograms for selected timepoints with transformed axes\")\r\n\r\n\r\n\r\nHistograms of viral load displayed for selected time points. A square root transformation has been applied to each axis. This aids visibility of low values and facilitates comparison with the main histograms for viral load.\r\nThere is a ridge plot of viral load presented near the end of the document, placed there due to its length.\r\nCD4 visualisation\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  ggplot(aes(x = CD4)) +\r\n  geom_histogram() +\r\n  ylab(\"Count\") +\r\n  xlab(\"CD4+\") +\r\n  ggtitle(\"Absolute CD4+ histogram\") +\r\n  scale_y_continuous(labels = scales::label_comma())\r\n\r\n\r\n\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  ggplot(aes(x = CD4)) +\r\n  geom_histogram() +\r\n  ylab(\"Count\") +\r\n  xlab(\"CD4+\") +\r\n  scale_x_sqrt(breaks = c(100, 400, 1000, 2500, 5000, 10000, 15000)) +\r\n  scale_y_sqrt(labels = scales::label_comma(),\r\n               breaks = c(10^2, 2.5*10^3, 10^4, 3*10^4, 5*10^4, 10^5)) +\r\n  ggtitle(\"Viral load histogram with square root transformation of both axes\")\r\n\r\n\r\n\r\nRel CD4 visualisation\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  mutate(high_rel = if_else(Rel_CD4 >= 100, \"high\", \"expected\")) %>%\r\n  ggplot(aes(x = Rel_CD4, fill = high_rel)) +\r\n  geom_histogram() +\r\n  geom_vline(xintercept = 100, linetype = \"longdash\", alpha = 0.25) +\r\n  ggtitle(\"Relative CD4+ histogram\") +\r\n  xlab(\"Relative CD4+\") +\r\n  scale_fill_manual(\"Rel_CD4 >= 100?\", \r\n                    values = c(\"#1b9e77\", \"#d95f02\"),\r\n                    labels = c(\"No\", \"Yes\"))\r\n\r\n\r\n\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  mutate(high_rel = if_else(Rel_CD4 >= 100, \"high\", \"expected\")) %>%\r\n  ggplot(aes(x = Rel_CD4, fill = high_rel)) +\r\n  # I tried changing bin or bin_width to have all >= 100 on one side but failed\r\n  geom_histogram(bins = 20) +\r\n  geom_vline(xintercept = 100, linetype = \"longdash\", alpha = 0.25) +\r\n  ggtitle(\"Relative CD4+ histogram with square root transformation to both axes\") +\r\n  scale_x_sqrt(breaks = c(5, 25, 50, 75, 100, 200, 300, 400),\r\n               name = \"Relative CD4+\") +\r\n  scale_y_sqrt(labels = scales::label_comma(),\r\n               name = \"Count\",\r\n               breaks = c(100, 10^3, 10^4, 3*10^4, 6*10^4, 9*10^4)) +\r\n  # this would be neater if I used LaTex for the symbol\r\n  scale_fill_manual(\"Rel_CD4 >= 100?\", \r\n                    values = c(\"#1b9e77\", \"#d95f02\"),\r\n                    labels = c(\"No\", \"Yes\"))\r\n\r\n\r\n\r\nGender visualisation\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  group_by(PatientID, Gender) %>%\r\n  filter(row_number(PatientID) == 1) %>%\r\n  ggplot(aes(x = Gender, fill = Gender)) +\r\n  geom_bar() +\r\n  scale_y_continuous(labels = scales::label_comma(),\r\n                     name = \"Count\",\r\n                     # This fixes an issue with text being clipped at the top\r\n                     expand = expansion(mult = 0.1)) +\r\n  scale_fill_manual(values = c(\"#8dd3c7\", \"#bebada\")) +\r\n  theme_bw() +\r\n  theme(panel.border = element_blank(),\r\n        panel.grid.major.x = element_blank(),\r\n        legend.position = \"None\") +\r\n  ggtitle(\"Patient gender bar chart\") +\r\n  # vjust here shifts the text fully on top of the bar\r\n  stat_count(geom = \"text\", aes(label = after_stat(count)), vjust = -0.5)\r\n\r\n\r\n\r\nBase Drug Combo visualisation\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  # Not sure how to programmatically reorder according to size\r\n  # while keeping \"Other\" on the end, so manual it is\r\n  mutate(Base_Drug_Combo = factor(Base_Drug_Combo, \r\n                                  levels = c(\"FTC + TDF\", \r\n                                             \"3TC + ABC\", \r\n                                             \"DRV + FTC + TDF\",\r\n                                             \"FTC + RTVB + TDF\",\r\n                                             \"FTC + TAF\",\r\n                                             \"Other\"))) %>%\r\n  ggplot(aes(x = Base_Drug_Combo, fill = Base_Drug_Combo)) +\r\n  geom_bar() +\r\n  scale_y_continuous(labels = scales::label_comma(),\r\n                     name = \"Count\") +\r\n  # Without modification the labels overlap\r\n  scale_x_discrete(labels = gsub(\"\\\\s\", \"\\n\", levels(art_hiv$Base_Drug_Combo)),\r\n                   name = \"Base Drug Combination\") +\r\n  # I tried to put a little bit of thought into the colours\r\n  # e.g. 3TC & ABC don't appear elsewhere so no blue tie in\r\n  # I kept these colours for all categorical >2 variables\r\n  scale_fill_manual(values = c(\"#b3e2cd\", \"#fdcdac\", \"#cbd5e8\", \r\n                               \"#f4cae4\", \"#e6f5c9\", \"#E1E1E1\")) +\r\n  theme_bw() +\r\n  theme(panel.border = element_blank(),\r\n        panel.grid.major.x = element_blank(),\r\n        legend.position = \"None\") +\r\n  ggtitle(\"Base drug combination bar chart\")\r\n\r\n\r\n\r\nNote that this is per observation/time point, not per person.\r\nComp INI visualisation\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  ggplot(aes(x = reorder(Comp_INI, Comp_INI, length), fill = Comp_INI)) +\r\n  geom_bar() +\r\n  scale_y_continuous(labels = scales::label_comma()) +\r\n  scale_fill_manual(values = c(\"#b3e2cd\", \"#f4cae4\", \"#e6f5c9\", \"#E1E1E1\")) +\r\n  ggtitle( \"Complementary integrase inhibitor bar chart\") +\r\n  xlab(\"Complementary integrase inhibitor\") +\r\n  ylab(\"Count\") +\r\n  theme_bw() +\r\n  theme(panel.border = element_blank(),\r\n        panel.grid.major.x = element_blank(),\r\n        legend.position = \"None\")\r\n\r\n\r\n\r\nNote that this is per observation/time point, not per person.\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  filter(Comp_INI != \"Not Applied\") %>%\r\n  ggplot(aes(x = reorder(Comp_INI, Comp_INI, length), fill = Comp_INI)) +\r\n  geom_bar() +\r\n  scale_y_continuous(labels = scales::label_comma(),\r\n                     # Added 2,500 break to defaults\r\n                     breaks = c(2.5*10^3, 2*10^4, 4*10^4, 6*10^4)) +\r\n  scale_fill_manual(values = c(\"#b3e2cd\", \"#f4cae4\", \"#e6f5c9\", \"#E1E1E1\")) +\r\n  ggtitle( \"Complementary integrase inhibitor bar chart, not showing unused\") +\r\n  xlab(\"Complementary integrase inhibitor\") +\r\n  ylab(\"Count\") +\r\n  theme_bw() +\r\n  theme(panel.border = element_blank(),\r\n        panel.grid.major.x = element_blank(),\r\n        legend.position = \"None\")\r\n\r\n\r\n\r\nComp NNRTI visualisation\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  ggplot(aes(x = Comp_NNRTI, fill = Comp_NNRTI)) +\r\n  geom_bar() +\r\n  scale_y_continuous(labels = scales::label_comma()) +\r\n  scale_fill_manual(values = c(\"#b3e2cd\", \"#f4cae4\", \"#e6f5c9\", \"#E1E1E1\")) +\r\n  ggtitle( \"Complementary NNRTI bar chart\") +\r\n  xlab(\"Complementary NNRTI\") +\r\n  ylab(\"Count\") +\r\n  theme_bw() +\r\n  theme(panel.border = element_blank(),\r\n        panel.grid.major.x = element_blank(),\r\n        legend.position = \"None\")\r\n\r\n\r\n\r\nNote that this is per observation/time point, not per person.\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  ggplot(aes(x = Comp_NNRTI, fill = Comp_NNRTI)) +\r\n  geom_bar() +\r\n  scale_y_log10(labels = scales::label_comma()) +\r\n  scale_fill_manual(values = c(\"#b3e2cd\", \"#f4cae4\", \"#e6f5c9\", \"#E1E1E1\")) +\r\n  ggtitle( \"Complementary NNRTI bar chart using log scale\") +\r\n  xlab(\"Complementary NNRTI\") +\r\n  ylab(\"Count\") +\r\n  theme_bw() +\r\n  theme(panel.border = element_blank(),\r\n        panel.grid.major.x = element_blank(),\r\n        legend.position = \"None\")\r\n\r\n\r\n\r\nExtra PI visualisation\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  ggplot(aes(x = reorder(Extra_PI, Extra_PI, length), fill = Extra_PI)) +\r\n  geom_bar() +\r\n  scale_y_continuous(labels = scales::label_comma(),\r\n                     name = \"Count\") +\r\n  xlab(\"Extra Protease Inhibitor\") +\r\n  ggtitle(\"Extra protease inhibitor bar chart\") +\r\n  scale_fill_manual(values = c(\"#b3e2cd\", \"#fdcdac\", \"#cbd5e8\", \"#f4cae4\", \"#e6f5c9\", \"#E1E1E1\")) +\r\n  theme_bw() +\r\n  theme(panel.border = element_blank(),\r\n        panel.grid.major.x = element_blank(),\r\n        legend.position = \"None\")\r\n\r\n\r\n\r\nNote that this is per observation/time point, not per person.\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  filter(Extra_PI != \"Not Applied\") %>%\r\n  ggplot(aes(x = reorder(Extra_PI, Extra_PI, length), fill = Extra_PI)) +\r\n  geom_bar() +\r\n  scale_y_continuous(labels = scales::label_comma(),\r\n                     name = \"Count\") +\r\n  xlab(\"Extra Protease Inhibitor\") +\r\n  scale_fill_manual(values = c(\"#b3e2cd\", \"#fdcdac\", \"#cbd5e8\", \"#f4cae4\", \"#e6f5c9\", \"#E1E1E1\")) +\r\n  theme_bw() +\r\n  theme(panel.border = element_blank(),\r\n        panel.grid.major.x = element_blank(),\r\n        legend.position = \"None\") +\r\n  ggtitle(\"Extra protease inhibitor bar chart, not showing unused\")\r\n\r\n\r\n\r\nExtra pk En visualisation\r\n\r\n\r\nhide\r\n\r\nbinary_figure <- function(xvalue) {\r\n  art_hiv %>%\r\n    ggplot(aes(x = {{xvalue}}, fill = {{xvalue}})) +\r\n    geom_bar() +\r\n    scale_y_continuous(labels = scales::label_comma(),\r\n                       name = \"Count\",\r\n                       expand = expansion(mult = 0.1)) +\r\n    # I just think the only grey is boring & defaults were ugly (too saturated)\r\n    # I also wanted to avoid red or green symbolism\r\n    scale_fill_manual(values = c(\"#8dd3c7\", \"#bebada\")) +\r\n    theme_bw() +\r\n    theme(panel.border = element_blank(),\r\n          panel.grid.major.x = element_blank(),\r\n          legend.position = \"None\") +\r\n    stat_count(geom = \"text\", aes(label = after_stat(count)), vjust = -0.5)\r\n}\r\n\r\n\r\n\r\n\r\nhide\r\n\r\nbinary_figure(Extra_pkEn) +\r\n  xlab(\"Extra Pharmacokinetic Enhancer provided\") +\r\n  ggtitle(\"Extra pharmacokinetic enhancer bar chart\")\r\n\r\n\r\n\r\nNote that this is per observation/time point, not per person.\r\nVL M visualisation\r\n\r\n\r\nhide\r\n\r\nbinary_figure(VL_M) +\r\n  xlab(\"Viral load measurement\") +\r\n  ggtitle(\"Viral load measurement bar chart\")\r\n\r\n\r\n\r\nNote that this is per observation/time point, not per person.\r\nCD4 M visualisation\r\n\r\n\r\nhide\r\n\r\nbinary_figure(CD4_M) +\r\n  xlab(\"CD4+ measurement\") +\r\n  ggtitle(\"CD4+ measurement bar chart\")\r\n\r\n\r\n\r\nNote that this is per observation/time point, not per person.\r\nDrug M visualisation\r\n\r\n\r\nhide\r\n\r\nbinary_figure(Drug_M) +\r\n  xlab(\"Drug measurement/recorded\") +\r\n  ggtitle(\"Drug measurement bar chart\")\r\n\r\n\r\n\r\nNote that this is per observation/time point, not per person.\r\nEthnicity visualisation\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  group_by(PatientID, Ethnicity) %>%\r\n  filter(row_number(PatientID) == 1) %>%\r\n  ggplot(aes(x = Ethnicity, fill = Ethnicity)) +\r\n  geom_bar() +\r\n  scale_y_continuous(labels = scales::label_comma(),\r\n                     expand = expansion(mult = 0.1)) +\r\n  scale_fill_manual(values = c(\"#b3e2cd\", \"#f4cae4\", \"#e6f5c9\", \"#E1E1E1\")) +\r\n  ggtitle( \"Ethnicity bar chart\") +\r\n  ylab(\"Count\") +\r\n  theme_bw() +\r\n  theme(panel.border = element_blank(),\r\n        panel.grid.major.x = element_blank(),\r\n        legend.position = \"None\") +\r\n  stat_count(geom = \"text\", aes(label = after_stat(count)), vjust = -0.5)\r\n\r\n\r\n\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  group_by(PatientID, Ethnicity) %>%\r\n  filter(row_number(PatientID) == 1) %>%\r\n  ggplot(aes(x = Ethnicity, fill = Ethnicity)) +\r\n  geom_bar() +\r\n  scale_y_log10(labels = scales::label_comma(),\r\n                expand = expansion(mult = 0.1)) +\r\n  scale_fill_manual(values = c(\"#b3e2cd\", \"#f4cae4\", \"#e6f5c9\", \"#E1E1E1\")) +\r\n  ggtitle( \"Ethnicity bar chart with log scale\") +\r\n  ylab(\"Count\") +\r\n  theme_bw() +\r\n  theme(panel.border = element_blank(),\r\n        panel.grid.major.x = element_blank(),\r\n        legend.position = \"None\")\r\n\r\n\r\n\r\nRidgeline plot\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  mutate(Timepoints = as.factor(Timepoints)) %>%\r\n  ggplot(aes(x = VL, y = Timepoints, fill = after_stat(x))) +\r\n  geom_density_ridges_gradient() +\r\n  scale_x_log10(labels = scales::label_comma(),\r\n                breaks = c(10, 10^2, 10^3, 10^4, 10^5),\r\n                name = \"Viral Load\",\r\n                # 2nd axis aids interpretation given plot height\r\n                sec.axis = dup_axis()) +\r\n  # I want readers to move forwards through time as they scroll down\r\n  scale_y_discrete(limits = rev) +\r\n  scale_fill_viridis_c(trans = \"log\") +\r\n  theme_bw() +\r\n  theme(panel.border = element_blank(),\r\n        legend.position = \"None\")\r\n\r\n\r\n\r\nOther exploration / data checking\r\n\r\n\r\nhide\r\n\r\n# confirming that Row_Number is just row numbers and not some other sequence\r\nart_hiv %>%\r\n  mutate(row_n = row_number(Row_Number),\r\n         consistent = ifelse(row_n - 1  == Row_Number, TRUE, FALSE)) %>%\r\n  select(consistent) %>%\r\n  summary()\r\n\r\n consistent    \r\n Mode:logical  \r\n TRUE:534960   \r\n\r\nAs you can see below, even where a binary indicator shows a variable as not being measured this does not mean there is no value provided for that variable.\r\nThis may be an artifact from the data being synthetic.\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  filter(VL_M == \"False\") %>%\r\n  select(VL, VL_M) %>%\r\n  head()\r\n\r\n# A tibble: 6 × 2\r\n     VL VL_M \r\n  <dbl> <fct>\r\n1  47.3 False\r\n2  37.9 False\r\n3  21.9 False\r\n4  16.4 False\r\n5  14.7 False\r\n6  33.1 False\r\n\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  filter(CD4_M == \"False\") %>%\r\n  select(CD4, Rel_CD4, CD4_M) %>%\r\n  head()\r\n\r\n# A tibble: 6 × 3\r\n    CD4 Rel_CD4 CD4_M\r\n  <dbl>   <dbl> <fct>\r\n1  231.    15.1 False\r\n2  223.    12.8 False\r\n3  247.    19.2 False\r\n4  584.    31.8 False\r\n5  400.    30.2 False\r\n6  296.    10.8 False\r\n\r\n\r\n\r\nhide\r\n\r\nart_hiv %>%\r\n  filter(Drug_M == \"False\") %>%\r\n  select(Drug_M, Base_Drug_Combo, Comp_INI, Comp_NNRTI, Extra_PI, Extra_pkEn) %>%\r\n  head()\r\n\r\n# A tibble: 6 × 6\r\n  Drug_M Base_Drug_Combo Comp_INI    Comp_NNRTI Extra_PI    Extra_pkEn\r\n  <fct>  <fct>           <fct>       <fct>      <fct>       <fct>     \r\n1 False  FTC + TDF       Not Applied EFV        Not Applied False     \r\n2 False  FTC + TDF       Not Applied RPV        Not Applied False     \r\n3 False  FTC + TDF       EVG         RPV        Not Applied False     \r\n4 False  FTC + TDF       Not Applied RPV        Not Applied False     \r\n5 False  FTC + TDF       Not Applied RPV        Not Applied False     \r\n6 False  FTC + TDF       Not Applied RPV        Not Applied False     \r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2024-08-27-exploring-synthetic-hiv-data/exploring-synthetic-hiv-data_files/figure-html5/VL_basic_hist-1.png",
    "last_modified": "2024-08-27T11:56:26+10:00",
    "input_file": "exploring-synthetic-hiv-data.knit.md"
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to Brianna's Blog",
    "description": "Not much to say here",
    "author": [
      {
        "name": "Brianna Argall",
        "url": {}
      }
    ],
    "date": "2024-06-05",
    "categories": [],
    "contents": "\r\nHi! Although I hope readers find something useful or interesting from this blog, for now it’s mostly a place for me to bring together - and possible refine more - techniques I have used. I’ve found that I like having examples of my own work I can copy-paste-adapt.\r\nI’m guessing I’ll run my code on examples provided in base R most of the time but I don’t promise consistency in that regard.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2024-08-26T16:09:52+10:00",
    "input_file": {}
  }
]
